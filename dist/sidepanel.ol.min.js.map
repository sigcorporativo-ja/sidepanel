{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/group_panel.html","webpack:///./src/templates/sidepanel.html","webpack:///./src/facade/js/mapeasidepanel.js","webpack:///./src/impl/ol/js/sidepanelcontrol.js","webpack:///./src/facade/js/sidepanelcontrol.js","webpack:///./src/facade/js/sidepanel.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MapeaSidepanel","M","ui","Panel","options","collapsible","className","map_","sidepanelContainer","htmlButtonsContainer","htmlPanelsContainer","initialized","plugins","activePlugin","activePLuginGroup","numberGroups","panzoom","ACTIVE_BUTTON_CLASS","TEMPLATE","map","container","classList","add","this","fire","evt","ADDED_TO_MAP","checkPanZoom","on","SHOW","document","querySelector","utils","isNullOrEmpty","setAttribute","HIDE","groupTitle","groupIcon","groupOrder","template","compileSync","string","parseToHtml","templateVars","isUndefined","vars","htmlText","Handlebars","compile","templateFn","stringToHtml","Promise","success","fail","html","title","icon","htmlButton","htmlPanelButtons","htmlPanelContainer","group","id","style","order","addEventListener","ev","openGroup","initializeHtmlPanel","appendChild","pluginConf","plugin","panelizePlugin","addPlugin","pluginPanel","htmlPluginPanel","htmlControl","getPluginPanel","getTemplatePanel","remove","_tooltip","length","togglePlugin","push","setTimeout","open","searchstreet","div","createElement","innerHTML","insertBefore","firstChild","geocoderpelias","measurebar","getElementsByClassName","measurebarControl","measurebarInfo","console","log","parentNode","closeGroup","click","event","newActivePlugin","target","dataset","pluginGroup","pluginIndex","collapse","pluginClass","isCollapsed","controls_","getPanel","control_","e","getControls","getElement","sidePanelButton","SidepanelControl","impl","Control","SidepanelImplControl","exception","control","Sidepanel","Plugin","metadata_","api","metadata","panelOptions_","collapsedButtonClass","position","TL","tooltip","sidePanel","activePluginIndex","htmlButtonControl","addControls","addPanels","pluginOrder","addGroup","window","M$ui$Sidepanel","M$plugin$Sidepanel","M$control$SidepanelControl","M$impl$control$SidepanelControl"],"mappings":"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","file":"sidepanel.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = \"<div class=\\\"group-panel m-panel collapsed\\\">\\r\\n    <!-- CONTENEDOR DE BOTONES DE ACTIVACION DE PLUGINS -->\\r\\n    <div class=\\\"group-buttons-container\\\"></div>\\r\\n    <!-- CONTENEDOR DE PLUGINS -->\\r\\n    <div class=\\\"group-panel-container\\\"></div>\\r\\n    <!-- BOTÓN DE ACTIVACIÓN DEL GRUPO-->\\r\\n    <button class=\\\"group-button m-panel-btn {{group.icon}}\\\" title=\\\"{{group.title}}\\\"></button>\\r\\n</div>\";","module.exports = \"<div class=\\\"sidepanel\\\">\\r\\n    <!-- CONTENEDOR DE BOTONES DE ACTIVACION DE PLUGINS -->\\r\\n    <div class=\\\"buttons-container\\\"></div>\\r\\n    <!-- CONTENEDOR DE PLUGINS -->\\r\\n    <div class=\\\"panel-container\\\"></div>\\r\\n</div>\";","/* eslint-disable */\r\n/**\r\n * @module M/ui/Sidepanel\r\n */\r\nimport template from 'templates/group_panel';\r\n\r\nexport default class MapeaSidepanel extends M.ui.Panel {\r\n    /**\r\n     * Creates an instance of MapeaSidepanel.\r\n     * @param {any} name\r\n     * @param {any} options\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    constructor(name, options) {\r\n        //se establecen opciones propias del tipo de panel\r\n\r\n        options.collapsible = true;\r\n        options.className = 'm-sidePanel-manager';\r\n        super(name, options);\r\n        this.map_ = null;\r\n        this.sidepanelContainer = null;\r\n        //contenedor de controles que activa y desactivan los plugins\r\n        this.htmlButtonsContainer = null;\r\n        //contenedor del html de los paneles de funcionalidades de los plugins\r\n        this.htmlPanelsContainer = null;\r\n        //indica si el panel ha sido inicializado\r\n        this.initialized = false;\r\n        //Array de plugins incluidos en el panel\r\n        this.plugins = [];\r\n        //plugin activo\r\n        this.activePlugin = null;\r\n        //grupo activo\r\n        this.activePLuginGroup = null;\r\n        this.numberGroups = 0;\r\n\r\n        //panzoom\r\n        this.panzoom = null;\r\n        //constantes\r\n        this.ACTIVE_BUTTON_CLASS = \"active-plugin\";\r\n        this.TEMPLATE = '';\r\n\r\n    }\r\n\r\n    /**\r\n     * Añade el panel al mapa\r\n     *\r\n     * @param {any} map\r\n     * @param {any} container\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    addTo(map, container) {\r\n        super.addTo(map, container);\r\n        //marcamos el div del area contenedor con la clase  side-panel-area\r\n        container.classList.add(\"side-panel-area\");\r\n        this.map_ = map;\r\n        this.fire(M.evt.ADDED_TO_MAP);\r\n        this.checkPanZoom();\r\n    }\r\n\r\n    checkPanZoom() {\r\n        this.on(M.evt.SHOW, () => {\r\n            this.panzoom = document.querySelector('.side-panel-area > .m-panzoom');\r\n            if (!M.utils.isNullOrEmpty(this.panzoom)) {\r\n                this.panzoom.setAttribute('style', 'margin-left:370px !important');\r\n            }\r\n        });\r\n        this.on(M.evt.HIDE, () => {\r\n            if (!M.utils.isNullOrEmpty(this.panzoom)) {\r\n                this.panzoom.setAttribute('style', 'margin-left:60px !important');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Crea un nuevo botón de grupo con su contenedor al que poder añadir los botones de los plugins del grupo\r\n     *\r\n     * @param {*} groupTitle\r\n     * @param {*} groupIcon\r\n     * @param {*} groupOrder\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    addGroup(groupTitle, groupIcon, groupOrder, plugins) {\r\n        if (!M.template.compileSync) { // JGL: retrocompatibilidad Mapea4\r\n            M.template.compileSync = (string, options) => {\r\n                let templateCompiled;\r\n                let templateVars = {};\r\n                let parseToHtml;\r\n                if (!M.utils.isUndefined(options)) {\r\n                    templateVars = M.utils.extends(templateVars, options.vars);\r\n                    parseToHtml = options.parseToHtml;\r\n                }\r\n                const templateFn = Handlebars.compile(string);\r\n                const htmlText = templateFn(templateVars);\r\n                if (parseToHtml !== false) {\r\n                    templateCompiled = M.utils.stringToHtml(htmlText);\r\n                } else {\r\n                    templateCompiled = htmlText;\r\n                }\r\n                return templateCompiled;\r\n            };\r\n        }\r\n\r\n        return new Promise((success, fail) => {\r\n            const html = M.template.compileSync(template, {\r\n                'vars': {\r\n                    'group': {\r\n                        title: groupTitle,\r\n                        icon: groupIcon\r\n                    }\r\n                }\r\n            })\r\n\r\n            const htmlButton = html.querySelector(\"button.group-button\");\r\n            const htmlPanelButtons = html.querySelector(\"div.group-buttons-container\");\r\n            const htmlPanelContainer = html.querySelector(\"div.group-panel-container\");\r\n            let group = {\r\n                id: ++this.numberGroups,\r\n                htmlButton: htmlButton,\r\n                htmlPanelButtons: htmlPanelButtons,\r\n                htmlPanelContainer: htmlPanelContainer\r\n            };\r\n            htmlButton.style.order = groupOrder;\r\n            htmlButton.addEventListener(\"click\", (ev) => this.openGroup(group));\r\n            if (!this.initialized) {\r\n                this.initializeHtmlPanel();\r\n            }\r\n            this.htmlButtonsContainer.appendChild(htmlButton);\r\n            this.htmlPanelsContainer.appendChild(html);\r\n            for (const pluginConf of plugins) {\r\n                pluginConf.plugin.on(M.evt.ADDED_TO_MAP, (plugin) => {\r\n                    this.panelizePlugin(plugin, pluginConf.order, group);\r\n                });\r\n\r\n                this.map_.addPlugin(pluginConf.plugin);\r\n            }\r\n\r\n            // Añadir código dependiente del DOM\r\n            success(html);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Realiza las tareas necerias para incluir el plugin en el panel\r\n     *\r\n     * @param {any} plugin\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    panelizePlugin(plugin, order, group) {\r\n        let pluginPanel; //Objeto M.ui.Panel del plugin\r\n        let htmlPluginPanel; //panel completo del plugin\r\n        let htmlControl; //boton de activación del panel del plugin\r\n        // al añadir el primer plugin ya tenemos el panel renderizado, en este momento\r\n        //  hacemos los cambios necesarios al panel y lo marcamos como inicializado\r\n        if (!this.initialized) {\r\n            this.initializeHtmlPanel();\r\n        }\r\n        pluginPanel = this.getPluginPanel(plugin);\r\n        //console.log('Panel de ' + plugin.name, pluginPanel);\r\n        //Si no existe no se puede agregar\r\n        if (pluginPanel) {\r\n            htmlPluginPanel = pluginPanel.getTemplatePanel();\r\n            //let panel = plugin.control_.getPanel().getTemplatePanel();\r\n            // Obtención del botón de activacvion del  plugin\r\n            htmlControl = htmlPluginPanel.querySelector(\"button.m-panel-btn\");\r\n\r\n            // Para el caso del plugin searchstreet cambiamos el icono para que sea más intuitivo\r\n            if (plugin.name == 'searchstreetgeosearch') {\r\n                htmlControl.classList.remove('g-cartografia-flecha-derecha');\r\n                htmlControl.classList.add('g-cartografia-posicion4');\r\n            }\r\n\r\n            // Establecer atributos al botón para manejarlos en el evento click\r\n            htmlControl.style.order = order;\r\n            htmlControl.setAttribute('data-plugin', plugin.name);\r\n            htmlControl.setAttribute('title', pluginPanel._tooltip);\r\n            htmlControl.setAttribute('data-plugin-index', this.plugins.length);\r\n            htmlControl.setAttribute('data-plugin-class', htmlControl.classList);\r\n\r\n            // Si se ha pasado un grupo al que agregar el botón lo agregamos, sino al general\r\n            // mantenemos el panel completo, no nos quedamos con el m-panel-controls para mantener la\r\n            // funcionalidad de mostrar u ocultar el panel de MAPEA\r\n            htmlControl.addEventListener(\"click\", (ev) => this.togglePlugin(ev));\r\n\r\n            if (!M.utils.isNullOrEmpty(group)) {\r\n                htmlControl.setAttribute('data-plugin-group', group.id);\r\n                group.htmlPanelContainer.appendChild(htmlPluginPanel);\r\n                group.htmlPanelButtons.appendChild(htmlControl);\r\n                // Si es el primer plugin que se añade, se selecciona por defecto\r\n                if (order == 1) {\r\n                    group.activePlugin = htmlControl;\r\n                }\r\n            } else {\r\n                this.htmlButtonsContainer.appendChild(htmlControl);\r\n                this.htmlPanelsContainer.appendChild(htmlPluginPanel);\r\n            }\r\n\r\n            this.plugins.push(plugin);\r\n\r\n            // Cuando se ha cargado el plugin managelayers, se abre\r\n            if (plugin.name == \"ManageLayers\") {\r\n                setTimeout(() => this.open(), 100);\r\n            }\r\n            // Annadimos un titulo al plugin de buscador de calles\r\n            if (plugin.name == 'searchstreetgeosearch') {\r\n                let searchstreet = document.querySelector(\".m-searchstreetgeosearch-container\");\r\n                if (M.utils.isNullOrEmpty(searchstreet.querySelector(\"div.title\"))) {\r\n                    let div = document.createElement('div');\r\n                    div.innerHTML = 'Buscador de calles y geobúsquedas';\r\n                    div.classList.add('title');\r\n                    searchstreet.insertBefore(div, searchstreet.firstChild);\r\n                }\r\n            } else if (plugin.name == 'geocoderpelias') {\r\n                // Annadimos un titulo al plugin de geocoderpelias\r\n                let geocoderpelias = document.querySelector(\"#m-geocoderpelias-container\");\r\n                if (M.utils.isNullOrEmpty(geocoderpelias.querySelector(\"div.title\"))) {\r\n                    let div = document.createElement('div');\r\n                    div.innerHTML = 'Buscador Pelias';\r\n                    div.classList.add('title');\r\n                    geocoderpelias.insertBefore(div, geocoderpelias.firstChild);\r\n                }\r\n             } else if (plugin.name == 'measurebar') {\r\n                // Annadimos un titulo al plugin de measurebar\r\n                let measurebar = document.getElementsByClassName(\"m-panel m-measurebar\")[0];\r\n                //let measurebar = document.getElementsByClassName(\"m-panel m-tools\")[0];\r\n                let measurebarControl = measurebar.getElementsByClassName(\"m-panel-controls\")[0];\r\n                if (M.utils.isNullOrEmpty(measurebar.querySelector(\"div.title\"))) {\r\n                    let title = document.createElement('div');\r\n                    title.innerHTML = 'Herramientas de medida';\r\n                    title.classList.add('title');\r\n                    let measurebarInfo = document.createElement('div');\r\n                    measurebarInfo.innerHTML = 'Seleccione entre realizar una medida de longitud o de área';\r\n                    measurebarInfo.classList.add('measurebarInfo');\r\n                    measurebar.appendChild(measurebarControl)\r\n                    measurebar.appendChild(measurebarInfo)\r\n                    measurebarControl.insertBefore(measurebarInfo,measurebarControl.firstChild);\r\n                    measurebarControl.insertBefore(title, measurebarControl.firstChild);\r\n                    \r\n                }\r\n            }\r\n            /*else if(plugin.name == 'geosearch') {\r\n                console.log('GEOSEARCH!!');\r\n                let searchstreet = document.querySelector(\".m-geosearch-container\");\r\n                if (M.utils.isNullOrEmpty(searchstreet.querySelector(\"div.title\"))) {\r\n                    let div = document.createElement('div');\r\n                    div.innerHTML = 'Geobúsquedas2';\r\n                    div.classList.add('title');\r\n                    searchstreet.insertBefore(div, searchstreet.firstChild);\r\n                }\r\n            }*/\r\n\r\n        } else {\r\n            console.log(\"Plugin \" + plugin.name + \" no tiene panel, no se incorpora.\");\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Abre el grupo de plugins pasado como parámetro\r\n     *\r\n     * @param {*} group\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    openGroup(group) {\r\n        if (this.activePLuginGroup != group) {\r\n            // Se activa el botón del grupo\r\n            group.htmlButton.classList.add(this.ACTIVE_BUTTON_CLASS);\r\n            // Se abre el panel del grupo\r\n            group.htmlPanelContainer.parentNode.classList.remove('collapsed');\r\n            // Se cierra el anterior grupo de plugins si lo hubiese\r\n            if (this.activePLuginGroup) {\r\n                this.closeGroup(this.activePLuginGroup);\r\n            }\r\n            this.activePLuginGroup = group;\r\n            // Si no tiene  ningún plugin activo, activo el primero\r\n            if (M.utils.isNullOrEmpty(group.activePlugin)) {\r\n                if (!M.utils.isNullOrEmpty(group.htmlPanelButtons.firstChild)) {\r\n                    group.htmlPanelButtons.firstChild.click();\r\n                    group.activePlugin = group.htmlPanelButtons.firstChild;\r\n                }\r\n            } else {\r\n                group.activePlugin.click();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Collapsa el grupo de plugins pasado como parámetro\r\n     *\r\n     * @param {*} group\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    closeGroup(group) {\r\n        // Se desactiva el botón del grupo\r\n        group.htmlButton.classList.remove(this.ACTIVE_BUTTON_CLASS);\r\n        // Se cierra el panel del grupo\r\n        group.htmlPanelContainer.parentNode.classList.add('collapsed');\r\n        // Se elimina el grupo activo\r\n        this.activePLuginGroup = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Activa el plugin desactivando el plugin activo previo\r\n     *\r\n     * @param {*} event\r\n     * @param {*} htmlButtonsContainer\r\n     * @memberof MapeaSidepanel\r\n     */\r\n    togglePlugin(event) {\r\n        let newActivePlugin = event.target;\r\n        // Si hay un grupo abierto\r\n        if (this.activePLuginGroup) {\r\n            // Si el plugin no pertenece al grupo abierto se cierra\r\n            if (this.activePLuginGroup.id != event.target.dataset.pluginGroup) {\r\n                // Se cierra el grupo\r\n                this.closeGroup(this.activePLuginGroup);\r\n            } else {\r\n                // Sino, se actualiza el plugin activo\r\n                this.activePLuginGroup.activePlugin = event.target;\r\n            }\r\n        }\r\n        // Si ya habia un plugin activo\r\n        if (this.activePlugin) {\r\n            if ((this.activePlugin.dataset.pluginIndex !== newActivePlugin.dataset.pluginIndex)) {\r\n                // Colapsamos la herramienta que ya no está activa\r\n                this.getPluginPanel(this.plugins[this.activePlugin.dataset.pluginIndex]).collapse();\r\n                //Eliminar el estilo de boton activo\r\n                this.activePlugin.classList.remove(this.ACTIVE_BUTTON_CLASS);\r\n            } else {\r\n                // Si es el mismo boton significa que se habra cerrado con el click, por lo que lo volvemos a abrir\r\n                this.getPluginPanel(this.plugins[this.activePlugin.dataset.pluginIndex]).open();\r\n            }\r\n\r\n        }\r\n        this.activePlugin = newActivePlugin;\r\n        // se reestablece el estilo incial del botón\r\n        this.activePlugin.className = this.activePlugin.dataset.pluginClass;\r\n        // se añade la clase de boton activo\r\n        this.activePlugin.classList.add(this.ACTIVE_BUTTON_CLASS);\r\n\r\n        if (this.isCollapsed())\r\n            this.open();\r\n    }\r\n\r\n\r\n    getPluginPanel(plugin) {\r\n        let pluginPanel;\r\n        // Obtención del panel del  plugin desde el mapa si no tiene nombre el plugin obtenemos\r\n        // el panel del control como workarround\r\n        try {\r\n            if (plugin.controls_) pluginPanel = plugin.controls_[0].getPanel();\r\n            else pluginPanel = plugin.control_.getPanel();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        return pluginPanel;\r\n    }\r\n\r\n    initializeHtmlPanel() {\r\n        this.sidepanelContainer = this.getControls()[0].getElement();\r\n        this.htmlButtonsContainer = this.getControls()[0].getElement().querySelector('.sidepanel>.buttons-container');\r\n        this.htmlPanelsContainer = this.getControls()[0].getElement().querySelector('.sidepanel>.panel-container');\r\n        const sidePanelButton = this.getTemplatePanel().querySelector(\"button.m-panel-btn\");\r\n        this.htmlButtonsContainer.appendChild(sidePanelButton);\r\n        this.initialized = true;\r\n    }\r\n\r\n}\r\n","/**\n * @module M/impl/control/SidepanelControl\n */\nexport default class SidepanelControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n\n}\n","/**\n * @module M/control/SidepanelControl\n */\n\nimport SidepanelImplControl from 'impl/sidepanelcontrol';\nimport template from 'templates/sidepanel';\n\nexport default class SidepanelControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor() {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(SidepanelImplControl)) {\n      M.exception('La implementación usada no puede crear controles SidepanelControl');\n    }\n    // 2. implementation of this control\n    const impl = new SidepanelImplControl();\n    super(impl, 'Sidepanel');\n\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    if (!M.template.compileSync) { // JGL: retrocompatibilidad Mapea4\n      M.template.compileSync = (string, options) => {\n        let templateCompiled;\n        let templateVars = {};\n        let parseToHtml;\n        if (!M.utils.isUndefined(options)) {\n          templateVars = M.utils.extends(templateVars, options.vars);\n          parseToHtml = options.parseToHtml;\n        }\n        const templateFn = Handlebars.compile(string);\n        const htmlText = templateFn(templateVars);\n        if (parseToHtml !== false) {\n          templateCompiled = M.utils.stringToHtml(htmlText);\n        } else {\n          templateCompiled = htmlText;\n        }\n        return templateCompiled;\n      };\n    }\n    \n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      // Añadir código dependiente del DOM\n      success(html);\n    });\n  }\n\n  \n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api stable\n   */\n  getActivationButton(html) {\n    return html.querySelector('button#m-sidepanelcontrol-button');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof SidepanelControl;\n  }\n\n  // Add your own functions\n}\n","/* eslint-disable */\n\n/**\n * @module M/plugin/Sidepanel\n */\nimport 'assets/css/sidepanel';\nimport SidepanelControl from './sidepanelcontrol';\nimport MapeaSidepanel from './mapeasidepanel.js';\nimport api from '../../api.json';\n\nexport default class Sidepanel extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor() {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n\n    let panelOptions_ = {\n      collapsedButtonClass: 'g-cartografia-menu',\n      position: M.ui.position.TL,\n      tooltip: 'Gestor de paneles'\n    };\n    this.sidePanel = new MapeaSidepanel(\"Panel Lateral\", panelOptions_);\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.controls_.push(new SidepanelControl());\n    this.map_ = map;\n    this.controls_[0].on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n    // Si se abre el panel y no hay ningun plugin seleccionado, se abre el managelayers y si no lo encuentra el primer plugin por defecto\n    this.sidePanel.on(M.evt.SHOW, (evt) => {\n      if (M.utils.isNullOrEmpty(this.sidePanel.activePluginIndex)) {\n        let htmlButtonControl = this.sidePanel.htmlButtonsContainer.querySelector('*[data-plugin=\"ManageLayers\"]');\n        if (M.utils.isNullOrEmpty(htmlButtonControl)) {\n          htmlButtonControl = this.sidePanel.htmlButtonsContainer.querySelector('*[data-plugin-index=\"' + 0 + '\"]');\n        }\n        htmlButtonControl.click();\n      }\n    });\n    this.sidePanel.addControls(this.controls_);\n    this.map_.addPanels([this.sidePanel]);\n  }\n\n  /**\n   * Añade el plugin al mapa y lo inserta en el panel en el orden seleccionado\n   * @param {plugin} plugin\n   */\n  addPlugin(plugin, order) {\n    let pluginOrder = 0;\n    if (!M.utils.isNullOrEmpty(order)) {\n      pluginOrder = order;\n    }\n    plugin.on(M.evt.ADDED_TO_MAP, (plugin) => {\n      this.sidePanel.panelizePlugin(plugin, pluginOrder);\n    });\n    this.map_.addPlugin(plugin);\n\n  }\n\n  addGroup(options) {\n    let groupOrder = 0, groupIcon = '', groupTitle = \"Agrupación de plugins\", plugins = [];\n    if (!M.utils.isNullOrEmpty(options.order)) {\n      groupOrder = options.order;\n    }\n    if (!M.utils.isNullOrEmpty(options.icon)) {\n      groupIcon = options.icon;\n    }\n    if (!M.utils.isNullOrEmpty(options.title)) {\n      groupTitle = options.title;\n    }\n    if (!M.utils.isNullOrEmpty(options.plugins)) {\n      plugins = options.plugins;\n    }\n    this.sidePanel.addGroup(groupTitle, groupIcon, groupOrder, plugins);\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata(){\n    return this.metadata_;\n  }\n}\n","import M$ui$Sidepanel from '/home/fbmanas/Documentos/git-sigc/sidepanel/src/facade/js/mapeasidepanel';\nimport M$plugin$Sidepanel from '/home/fbmanas/Documentos/git-sigc/sidepanel/src/facade/js/sidepanel';\nimport M$control$SidepanelControl from '/home/fbmanas/Documentos/git-sigc/sidepanel/src/facade/js/sidepanelcontrol';\nimport M$impl$control$SidepanelControl from '/home/fbmanas/Documentos/git-sigc/sidepanel/src/impl/ol/js/sidepanelcontrol';\n\nif (!window.M.ui) window.M.ui = {};\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.ui.Sidepanel = M$ui$Sidepanel;\nwindow.M.plugin.Sidepanel = M$plugin$Sidepanel;\nwindow.M.control.SidepanelControl = M$control$SidepanelControl;\nwindow.M.impl.control.SidepanelControl = M$impl$control$SidepanelControl;\n"],"sourceRoot":""}